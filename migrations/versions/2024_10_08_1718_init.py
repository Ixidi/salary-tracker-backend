"""init

Revision ID: e833afc6b962
Revises: 
Create Date: 2024-10-08 17:18:59.334254

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import src.salary_tracker.data.model


# revision identifiers, used by Alembic.
revision: str = 'e833afc6b962'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('sheets',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('owner_user_uuid', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('user_external_accounts',
    sa.Column('provider', sa.Enum('GOOGLE', name='authprovider'), nullable=False),
    sa.Column('user_uuid', sa.Uuid(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('created_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('provider', 'user_uuid')
    )
    op.create_table('user_refresh_tokens',
    sa.Column('user_uuid', sa.Uuid(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('expires_at', src.salary_tracker.data.model.TZDateTime(timezone=True), nullable=False),
    sa.Column('created_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('user_uuid', 'token')
    )
    op.create_table('sheet_durations',
    sa.Column('sheet_uuid', sa.Uuid(), nullable=False),
    sa.Column('duration', sa.Interval(), nullable=False),
    sa.Column('created_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['sheet_uuid'], ['sheets.uuid'], ),
    sa.PrimaryKeyConstraint('sheet_uuid', 'duration')
    )
    op.create_table('sheet_group_sizes',
    sa.Column('sheet_uuid', sa.Uuid(), nullable=False),
    sa.Column('group_size', sa.Integer(), nullable=False),
    sa.Column('created_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['sheet_uuid'], ['sheets.uuid'], ),
    sa.PrimaryKeyConstraint('sheet_uuid', 'group_size')
    )
    op.create_table('sheet_rate_tables',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('sheet_uuid', sa.Uuid(), nullable=False),
    sa.Column('valid_from', src.salary_tracker.data.model.TZDateTime(timezone=True), nullable=False),
    sa.Column('valid_to', src.salary_tracker.data.model.TZDateTime(timezone=True), nullable=False),
    sa.Column('created_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['sheet_uuid'], ['sheets.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('sheet_records',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('sheet_uuid', sa.Uuid(), nullable=False),
    sa.Column('duration', sa.Interval(), nullable=False),
    sa.Column('group_size', sa.Integer(), nullable=False),
    sa.Column('group_name', sa.String(), nullable=False),
    sa.Column('happened_at', src.salary_tracker.data.model.TZDateTime(timezone=True), nullable=False),
    sa.Column('additional_info', sa.String(), nullable=True),
    sa.Column('created_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['sheet_uuid'], ['sheets.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('sheet_rates',
    sa.Column('rate_table_uuid', sa.Uuid(), nullable=False),
    sa.Column('group_size', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Interval(), nullable=False),
    sa.Column('rate', sa.Numeric(), nullable=False),
    sa.Column('created_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', src.salary_tracker.data.model.TZDateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['rate_table_uuid'], ['sheet_rate_tables.uuid'], ),
    sa.PrimaryKeyConstraint('rate_table_uuid', 'group_size', 'duration')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sheet_rates')
    op.drop_table('sheet_records')
    op.drop_table('sheet_rate_tables')
    op.drop_table('sheet_group_sizes')
    op.drop_table('sheet_durations')
    op.drop_table('user_refresh_tokens')
    op.drop_table('user_external_accounts')
    op.drop_table('sheets')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
